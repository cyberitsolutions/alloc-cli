#!/usr/bin/env python

from alloc import alloc

a = alloc()

# Setup the options that this cli can accept
ops = []
ops.append((''  ,'help           ','Show this help.'))
ops.append((''  ,'nude           ','Don\'t display a border or header row in the results.'))
ops.append(('q' ,'quiet          ','Run with no output except errors.'))
ops.append(('v' ,'verbose        ','Show time sheet\'s items.'))
ops.append(('p:','project=ID|NAME','A project ID, or a fuzzy match for a project name.'))
ops.append(('s:','status=STATUS  ','The time sheets\' status eg: edit, manager, admin, invoiced, finished.'))
ops.append(('t:','time=ID        ','A time sheet ID.'))
ops.append(('h:','hours=NUM      ','The time sheets must have this many hours recorded eg: "7" eg: ">7 AND <10 OR =4 AND !=8"'))
ops.append(('d:','date=YYYY-MM-DD','The from date of the earliest time sheet item.'))
ops.append(('o:','order=TS&TSI   ','The order the Time Sheets and Items are displayed in. Default: "ID&Date"'))

# Specify some header and footer text for the help text
help_text = "usage: %s [OPTIONS]\n\n%s\n\nIf run without arguments this program will display all of your editable time sheets."

# Get the command line arguments into a dictionary
o, remainder = a.get_args(ops, help_text)

# Got this far, then authenticate
a.authenticate();

# Initialize some variables
a.quiet = o['quiet']
a.nude = o['nude']
personID = a.get_my_personID()
projectID = ""
timeSheetID = ""
order1 = "ID"
order2 = "Date"
status = "edit"

# Get a projectID either passed via command line, or figured out from a project name
if a.is_num(o['project']):
  projectID = o['project']
elif o['project']:
  projectID = a.search_for_project(o['project'],personID)

if a.is_num(o['time']):
  timeSheetID = o['time']

if o['status']:
  status = o['status']

if o['order']:
  if '&' not in o['order']: o['order']+='&'
  order1,order2 = o['order'].split("&")

if not order2: order2 = 'Date'

ops = {}
if timeSheetID:
  ops['timeSheetID'] = timeSheetID
else:
  ops['personID'] = personID
  ops['status'] = status
  if projectID:
    ops['projectID'] = projectID

if o['hours']:
  ops['timeSheetItemHours'] = o['hours']
if o['date']:
  ops['dateFrom'] = o['date']

timeSheets = a.get_list("timeSheet",ops)

if timeSheets:
  if o['verbose']:
    for id,t in timeSheets.items():
      a.print_table({id:t}, a.row_timeSheet, sort=order1)
      a.print_table(a.get_list("timeSheetItem",{"timeSheetID": id}), a.row_timeSheetItem, sort=order2)
  else:
    a.print_table(timeSheets, a.row_timeSheet, sort=order1)




